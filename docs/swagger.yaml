basePath: /
definitions:
  dto.AtualizarClienteInputDto:
    properties:
      cpf:
        type: string
      email:
        type: string
      id:
        type: string
      nome:
        type: string
    type: object
  dto.CriarClienteInputDto:
    properties:
      cpf:
        type: string
      email:
        type: string
      nome:
        type: string
    type: object
  dto.ObterClienteOutputDto:
    properties:
      cpf:
        type: string
      email:
        type: string
      id:
        type: string
      nome:
        type: string
    type: object
  dto.ProdutoDto:
    properties:
      categoria:
        type: integer
      descricao:
        type: string
      id:
        type: string
      nome:
        type: string
      valor:
        type: number
    type: object
  entity.CategoriaProduto:
    enum:
    - 1
    - 2
    - 3
    - 4
    type: integer
    x-enum-varnames:
    - Lanche
    - Bebida
    - Sobremesa
    - Acompanhamento
  entity.Pedido:
    properties:
      clienteId:
        type: string
      data:
        type: string
      id:
        type: string
      numeroPedido:
        type: integer
      produtos:
        items:
          $ref: '#/definitions/entity.Produto'
        type: array
      status:
        $ref: '#/definitions/entity.StatusPedido'
      valor:
        type: number
    type: object
  entity.Produto:
    properties:
      categoria:
        $ref: '#/definitions/entity.CategoriaProduto'
      descricao:
        type: string
      id:
        type: string
      nome:
        type: string
      valor:
        type: number
    type: object
  entity.StatusPedido:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - Recebido
    - EmPreparacao
    - Pronto
    - Finalizado
  handler.Error:
    properties:
      message:
        type: string
    type: object
host: localhost:8000
info:
  contact:
    email: ff.oliveira32@gmail.com
    name: Felipe Fabricio
    url: https://www.linkedin.com/in/felipefabricio/
  description: API para o sistema de pedidos da WonderFood
  termsOfService: http://swagger.io/terms/
  title: WonderFood API
  version: "1.0"
paths:
  /clientes:
    get:
      consumes:
      - application/json
      description: Obtém todos os Clientes cadastrados no sistema
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ObterClienteOutputDto'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Listar todos os Clientes
      tags:
      - Clientes
    post:
      consumes:
      - application/json
      description: Cadastra um novo Cliente
      parameters:
      - description: Dados para cadastro do Cliente
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CriarClienteInputDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Inserir Cliente
      tags:
      - Clientes
  /clientes/{id}:
    put:
      consumes:
      - application/json
      description: Atualiza os Dados de um Cliente
      parameters:
      - description: Id do Cliente
        in: path
        name: id
        required: true
        type: string
      - description: Dados para atualizar o Cliente
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.AtualizarClienteInputDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Atualizar Cliente
      tags:
      - Clientes
  /pedidos:
    get:
      consumes:
      - application/json
      description: Obtém todos os Pedidos que ainda não foram Finalizados
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Pedido'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Listar Pedido em Aberto
      tags:
      - Pedidos
  /produtos:
    get:
      consumes:
      - application/json
      description: Obtém todos os Produtos cadastrados
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Produto'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Listar Produtos
      tags:
      - Produtos
    post:
      consumes:
      - application/json
      description: Cria um novo Produto
      parameters:
      - description: Request do Produto
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.ProdutoDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Inserir Produto
      tags:
      - Produtos
  /produtos/{categoria}:
    get:
      consumes:
      - application/json
      description: Obtém todos os Produtos cadastrados por Categoria de Produto
      parameters:
      - description: Categoria Produto
        in: path
        name: categoria
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Produto'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Listar Produto por Categoria de Produto
      tags:
      - Produtos
swagger: "2.0"
